@model HealthApp.MVC.ViewModels.Admin.DashboardViewModel

@{
    // ViewData["Title"] = "Dashboard Admin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}

<!-- Main Dashboard Section -->
<section class="dashboard">
    <h1>Dashboard</h1>

    <!-- Row of Stats Cards -->
    <div class="stats-cards">
        <div class="card patients">
            <div class="card-text">
                <h3>PATIENTS</h3>
                <p>@Model.TotalPatients</p>
            </div>
        </div>
        <div class="card doctors">
            <div class="card-text">
                <h3>DOCTORS</h3>
                <p>@Model.TotalDoctors</p>
            </div>
        </div>
        <div class="card appointments">
            <div class="card-text">
                <h3>APPOINTMENTS</h3>
                <p>@Model.TotalAppointments</p>
            </div>
        </div>
    </div>

    <!-- Example Analytics / Chart Area -->
    <div class="analytics-overview" style="margin-top: 2rem;">
        <h3>Appointments Overview</h3>
        <!-- Canvas for Chart.js -->
        <canvas id="appointmentsChart"></canvas>
    </div>

    <!-- Recent Notifications -->
    <div class="recent-activity" style="margin-top: 2rem;">
        <h3>Recent Notifications</h3>
        <ul>
            @if (Model.Notifications != null && Model.Notifications.Any())
            {
                foreach (var notification in Model.Notifications)
                {
                    <li>
                        <strong>@notification.Title</strong> - @notification.Content
                        <span>(@notification.DateSent.ToString("dd/MM/yyyy HH:mm"))</span>
                    </li>
                }
            }
            else
            {
                <li>No recent notifications</li>
            }
        </ul>
    </div>

    <!-- Recent Appointments Example -->
    <div class="recent-orders" style="margin-top: 2rem;">
        <h3>Recent Appointments</h3>
        <table>
            <thead>
                <tr>
                    <th>#</th>
                    <th>Patient</th>
                    <th>Doctor</th>
                    <th>Date</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.RecentAppointments != null && Model.RecentAppointments.Any())
                {
                    foreach (var appt in Model.RecentAppointments)
                    {
                        <tr>
                            <td>#@appt.Id</td>
                            <td>@appt.Patient.FirstName @appt.Patient.LastName</td>
                            <td>@appt.Doctor.FirstName @appt.Doctor.LastName</td>
                            <td>@appt.Date.ToString("yyyy-MM-dd HH:mm")</td>
                            <td>@appt.Status</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">No recent appointments</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <!-- Another section for recent notifications or charts -->
    @* <div class="recent-activity" style="margin-top:2rem;"> *@
    @*     <h3>Recent Notifications</h3> *@
    @*     <ul> *@
    @*         @foreach (var notification in Model.Notifications) *@
    @*         { *@
    @*             <li> *@
    @*                 <strong>@notification.Title</strong> - @notification.Content *@
    @*                 <span>(@notification.DateSent.ToString("dd/MM/yyyy HH:mm"))</span> *@
    @*             </li> *@
    @*         } *@
    @*     </ul> *@
    @* </div> *@
</section>


<!-- Scripts Section: Chart.js Example -->
@section Scripts {
    <!-- Make sure Chart.js is referenced. You can also serve it locally if preferred. -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Example chart using appointments data by month
        var ctx = document.getElementById('appointmentsChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar', // or 'line'
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [{
                    label: 'Appointments',
                    // Replace these sample values with dynamic data from your ViewModel
                    data: [@Model.JanCount, @Model.FebCount, @Model.MarCount, @Model.AprCount],
                    backgroundColor: '#4070f4'
                }]
            },
            options: {
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    </script>
}