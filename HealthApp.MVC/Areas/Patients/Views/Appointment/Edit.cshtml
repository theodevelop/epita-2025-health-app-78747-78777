@model HealthApp.MVC.Areas.Patients.Models.EditAppointmentViewModel

@{
    ViewBag.Title = "Modifier le Rendez-vous";
    var doctorList = ViewBag.Doctors as List<HealthApp.MVC.Models.Entities.Doctor>;
}

<h2 class="mb-4">Modifier le Rendez-vous</h2>

@using (Html.BeginForm("Edit", "Appointment", FormMethod.Post, new { area = "Patients" }))
{
    @Html.AntiForgeryToken()

    <!-- ID caché pour identifier le rendez-vous -->
    @Html.HiddenFor(m => m.Id)

    <!-- DoctorName requis dans le ViewModel → caché -->
    @Html.HiddenFor(m => m.DoctorName)

    <!-- Affichage global des erreurs -->
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- Sélection du médecin -->
    <div class="form-group">
        @Html.LabelFor(m => m.DoctorId, "Médecin")
        @Html.DropDownListFor(m => m.DoctorId,
                new SelectList(
                doctorList.Select(d => new
                {
                    Id = d.Id,
                    FullName = d.FirstName + " " + d.LastName
                }),
                "Id", "FullName", Model.DoctorId),
                "Sélectionner un médecin",
                new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.DoctorId, null, new { @class = "text-danger" })
    </div>

    <!-- Sélection de la date et de l'heure -->
    <div class="form-group">
        @Html.LabelFor(m => m.SelectedDate, "Date et Heure")
        <input type="datetime-local" name="SelectedDate" id="SelectedDate" class="form-control"
               value="@Model.SelectedDate.ToString("yyyy-MM-ddTHH:mm")" />
        @Html.ValidationMessageFor(m => m.SelectedDate, null, new { @class = "text-danger" })
    </div>

    <!-- Motif -->
    <div class="form-group">
        @Html.LabelFor(m => m.Reason, "Motif du rendez-vous")
        @Html.TextAreaFor(m => m.Reason, new { @class = "form-control", rows = 4 })
        @Html.ValidationMessageFor(m => m.Reason, null, new { @class = "text-danger" })
    </div>

    <!-- Boutons -->
    <button type="submit" class="btn btn-success">Enregistrer les modifications</button>
    <a href="@Url.Action("Details", "Appointment", new { area = "Patients", id = Model.Id })" class="btn btn-secondary ml-2">Annuler</a>
}

@section Scripts {
    <!-- Validation côté client -->
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <!-- Script debug pour vérifier que le formulaire est soumis -->
    <script>
        document.querySelector("form").addEventListener("submit", function (e) {
            console.log("✅ Formulaire soumis !");
        });
    </script>
}
